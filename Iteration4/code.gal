// GAL model for the Place Transition System (PTS)

// State variables for Agent and Environment
int agent_state = 0; // 0: outside, 1: tunnel, 2: collision, 3: leave
int env_state = 0; // 0: green, 1: red

// Action constants
const int ENTER = 0;
const int WAIT = 1;
const int RUN = 2;
const int RECOVER = 3;
const int EXIT = 4;

const int GO = 0;
const int STOP = 1;
const int ENV_RECOVER = 2;

// Protocol definitions
list agent_actions[4];
list env_actions[2];

agent_actions[0] = {ENTER, WAIT};  // outside
agent_actions[1] = {RUN, EXIT};    // tunnel
agent_actions[2] = {RECOVER};      // collision
agent_actions[3] = {};             // leave

env_actions[0] = {GO};  // green
env_actions[1] = {STOP, ENV_RECOVER};  // red

// Transitions for Agent
transition agent_wait_go {
    guard (agent_state == 0 && env_state == 0);
    effect { agent_state = 0; }
}

transition agent_wait_stop {
    guard (agent_state == 0 && env_state == 1);
    effect { agent_state = 0; }
}

transition agent_enter_go {
    guard (agent_state == 0 && env_state == 0);
    effect { agent_state = 1; }
}

transition agent_enter_collision {
    guard (agent_state == 0 && env_state == 0);
    effect { agent_state = 2; }
}

transition agent_recover {
    guard (agent_state == 2);
    effect { agent_state = 3; }
}

transition agent_exit_go {
    guard (agent_state == 1 && env_state == 0);
    effect { agent_state = 3; }
}

transition agent_exit_stop {
    guard (agent_state == 1 && env_state == 1);
    effect { agent_state = 3; }
}

// Transitions for Environment
transition env_go {
    guard (env_state == 0);
    effect { env_state = 1; }
}

transition env_stop {
    guard (env_state == 1);
    effect { env_state = 0; }
}

transition env_recover {
    guard (env_state == 1);
    effect { env_state = 0; }
}

// Handling collisions
transition handle_collision {
    guard (agent_state == 0 && env_state == 0 && agent_actions == ENTER);
    effect { agent_state = 2; }
}

// Initial states
initially {
    agent_state = 0;
    env_state = 0;
}

